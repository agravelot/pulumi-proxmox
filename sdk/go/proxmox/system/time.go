// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package system

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Time struct {
	pulumi.CustomResourceState

	// The local timestamp
	LocalTime pulumi.StringOutput `pulumi:"localTime"`
	// The node name
	NodeName pulumi.StringOutput `pulumi:"nodeName"`
	// The time zone
	TimeZone pulumi.StringOutput `pulumi:"timeZone"`
	// The UTC timestamp
	UtcTime pulumi.StringOutput `pulumi:"utcTime"`
}

// NewTime registers a new resource with the given unique name, arguments, and options.
func NewTime(ctx *pulumi.Context,
	name string, args *TimeArgs, opts ...pulumi.ResourceOption) (*Time, error) {
	if args == nil || args.NodeName == nil {
		return nil, errors.New("missing required argument 'NodeName'")
	}
	if args == nil || args.TimeZone == nil {
		return nil, errors.New("missing required argument 'TimeZone'")
	}
	if args == nil {
		args = &TimeArgs{}
	}
	var resource Time
	err := ctx.RegisterResource("proxmox:System/time:Time", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTime gets an existing Time resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTime(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TimeState, opts ...pulumi.ResourceOption) (*Time, error) {
	var resource Time
	err := ctx.ReadResource("proxmox:System/time:Time", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Time resources.
type timeState struct {
	// The local timestamp
	LocalTime *string `pulumi:"localTime"`
	// The node name
	NodeName *string `pulumi:"nodeName"`
	// The time zone
	TimeZone *string `pulumi:"timeZone"`
	// The UTC timestamp
	UtcTime *string `pulumi:"utcTime"`
}

type TimeState struct {
	// The local timestamp
	LocalTime pulumi.StringPtrInput
	// The node name
	NodeName pulumi.StringPtrInput
	// The time zone
	TimeZone pulumi.StringPtrInput
	// The UTC timestamp
	UtcTime pulumi.StringPtrInput
}

func (TimeState) ElementType() reflect.Type {
	return reflect.TypeOf((*timeState)(nil)).Elem()
}

type timeArgs struct {
	// The node name
	NodeName string `pulumi:"nodeName"`
	// The time zone
	TimeZone string `pulumi:"timeZone"`
}

// The set of arguments for constructing a Time resource.
type TimeArgs struct {
	// The node name
	NodeName pulumi.StringInput
	// The time zone
	TimeZone pulumi.StringInput
}

func (TimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*timeArgs)(nil)).Elem()
}
